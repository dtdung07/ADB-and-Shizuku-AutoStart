#!/data/data/com.termux/files/usr/bin/bash

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # Kh√¥ng m√†u

# C·∫•u h√¨nh
BASEDIR=$( dirname "${0}" )
BIN=/data/data/com.termux/files/usr/bin
HOME=/data/data/com.termux/files/home
DEX="${BASEDIR}/rish_shizuku.dex"
ADBW_PORT="${BASEDIR}/adbw_port"

# H√†m ghi log
log() {
    echo -e "${BLUE}[TH√îNG TIN]${NC} $1"
}

error() {
    echo -e "${RED}[L·ªñI]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[C·∫¢NH B√ÅO]${NC} $1"
}

# Ki·ªÉm tra tr∆∞·ªõc khi c√†i ƒë·∫∑t
log "ƒêang ki·ªÉm tra c√°c file c·∫ßn thi·∫øt..."

# Ki·ªÉm tra file b·∫Øt bu·ªôc t·ªìn t·∫°i
if [ ! -f "${DEX}" ]; then
    error "Kh√¥ng t√¨m th·∫•y file rish_shizuku.dex t·∫°i: ${DEX}"
    error "Vui l√≤ng t·∫£i file n√†y t·ª´: https://github.com/Mirai0009/Get-Url-via-Shizuku-Termux"
    exit 1
fi

if [ ! -f "${ADBW_PORT}" ]; then
    error "Kh√¥ng t√¨m th·∫•y file adbw_port t·∫°i: ${ADBW_PORT}"
    exit 1
fi

# ƒê·∫£m b·∫£o adbw_port binaries c√≥ quy·ªÅn th·ª±c thi
log "ƒêang c·∫•p quy·ªÅn th·ª±c thi cho adbw_port tools..."
chmod +x "${ADBW_PORT}" "${BASEDIR}/adbw_port_arm.bin" "${BASEDIR}/adbw_port_arm64.bin" 2>/dev/null || {
    warn "Kh√¥ng th·ªÉ c·∫•p quy·ªÅn cho m·ªôt s·ªë binary files (c√≥ th·ªÉ kh√¥ng t·ªìn t·∫°i)"
}

# Ki·ªÉm tra quy·ªÅn ghi
if [ ! -w "${BIN}" ]; then
    error "Kh√¥ng c√≥ quy·ªÅn ghi v√†o th∆∞ m·ª•c: ${BIN}"
    exit 1
fi

if [ ! -w "${HOME}" ]; then
    error "Kh√¥ng c√≥ quy·ªÅn ghi v√†o th∆∞ m·ª•c: ${HOME}"
    exit 1
fi

# B·∫≠t external apps trong Termux (c·∫ßn thi·∫øt cho adbw_port)
log "ƒêang c·∫•u h√¨nh Termux ƒë·ªÉ cho ph√©p external apps..."
value="true"
key="allow-external-apps"
file="/data/data/com.termux/files/home/.termux/termux.properties"
mkdir -p "$(dirname "$file")"
chmod 700 "$(dirname "$file")"
TERMUX_RESTART_NEEDED=false
if ! grep -E '^'"$key"'=.*' "$file" &>/dev/null; then
    [[ -s "$file" && ! -z "$(tail -c 1 "$file")" ]] && newline=$'\n' || newline=""
    echo "$newline$key=$value" >> "$file"
    success "ƒê√£ b·∫≠t allow-external-apps trong Termux"
    TERMUX_RESTART_NEEDED=true
else
    if ! grep -E '^'"$key"'=true' "$file" &>/dev/null; then
        sed -i'' -E 's/^'"$key"'=.*/'"$key=$value"'/' "$file"
        success "ƒê√£ c·∫≠p nh·∫≠t allow-external-apps=true"
        TERMUX_RESTART_NEEDED=true
    else
        log "allow-external-apps ƒë√£ ƒë∆∞·ª£c b·∫≠t"
    fi
fi

# Ki·ªÉm tra xem adb c√≥ s·∫µn kh√¥ng
if ! command -v adb >/dev/null 2>&1; then
    warn "ADB ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang c√†i ƒë·∫∑t..."
    pkg install android-tools
fi

log "T·∫•t c·∫£ ki·ªÉm tra ƒë√£ th√†nh c√¥ng!"

# T·∫°o script Shizuku n√¢ng cao
log "ƒêang t·∫°o script Shizuku..."
tee "${BIN}/shizuku" > /dev/null << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# L·∫•y th∆∞ m·ª•c script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ADBW_PORT_SCRIPT=""

# T√¨m adbw_port ·ªü c√°c v·ªã tr√≠ th√¥ng th∆∞·ªùng
for path in "${SCRIPT_DIR}" "${HOME}" "${HOME}/shizuku-autostart" "/data/data/com.termux/files/home" "$(pwd)"; do
    if [ -f "${path}/adbw_port" ]; then
        ADBW_PORT_SCRIPT="${path}/adbw_port"
        break
    fi
done

if [ -z "$ADBW_PORT_SCRIPT" ] || [ ! -f "$ADBW_PORT_SCRIPT" ]; then
    echo -e "${RED}L·ªñI: Kh√¥ng t√¨m th·∫•y adbw_port script!${NC}"
    exit 1
fi

echo -e "${BLUE}[TH√îNG TIN]${NC} S·ª≠ d·ª•ng adbw_port t·ª´: $ADBW_PORT_SCRIPT"

# Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c ch·ª©a adbw_port
cd "$(dirname "$ADBW_PORT_SCRIPT")" || exit 1

# L·∫•y c·ªïng ADB wireless
echo -e "${BLUE}[TH√îNG TIN]${NC} ƒêang t√¨m ki·∫øm c·ªïng ADB wireless..."
read ip port < <(./adbw_port _adb._tcp.local. 2>/dev/null \
  | sed -n -e 's/.*ipv4: \([0-9.]*\), port: \([0-9]*\).*/\1 \2/p')

device="${ip}:${port}"

if [[ -z "$ip" || -z "$port" ]]; then
    echo -e "${RED}L·ªñI: Kh√¥ng t√¨m th·∫•y IP ho·∫∑c port!${NC}"
    echo -e "${YELLOW}ƒê·∫£m b·∫£o r·∫±ng:${NC}"
    echo "  1. Wireless debugging ƒë√£ ƒë∆∞·ª£c b·∫≠t"
    echo "  2. Thi·∫øt b·ªã ƒë√£ ƒë∆∞·ª£c gh√©p n·ªëi"
    echo "  3. ƒêang k·∫øt n·ªëi c√πng m·∫°ng WiFi"
    
    echo -e "${BLUE}Th√¥ng tin debug:${NC}"
    ./adbw_port _adb._tcp.local.
    exit 1
fi

echo -e "${BLUE}[TH√îNG TIN]${NC} T√¨m th·∫•y thi·∫øt b·ªã: $device"

# K·∫øt n·ªëi ƒë·∫øn ADB
echo -e "${BLUE}[TH√îNG TIN]${NC} ƒêang k·∫øt n·ªëi ADB..."
if ! adb -s "$device" connect "$device" >/dev/null 2>&1; then
    echo -e "${RED}L·ªñI: Kh√¥ng th·ªÉ k·∫øt n·ªëi ADB ƒë·∫øn $device${NC}"
    exit 1
fi

# X√°c minh k·∫øt n·ªëi
if ! adb -s "$device" shell echo connected >/dev/null 2>&1; then
    echo -e "${RED}L·ªñI: K·∫øt n·ªëi ADB th·∫•t b·∫°i${NC}"
    exit 1
fi

echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} K·∫øt n·ªëi ADB th√†nh c√¥ng!"

# Ki·ªÉm tra ·ª©ng d·ª•ng Shizuku ƒë√£ c√†i ƒë·∫∑t ch∆∞a
echo -e "${BLUE}[TH√îNG TIN]${NC} ƒêang ki·ªÉm tra ·ª©ng d·ª•ng Shizuku..."
if ! adb -s "$device" shell pm path --user 0 moe.shizuku.privileged.api >/dev/null 2>&1; then
    echo -e "${RED}L·ªñI: ·ª®ng d·ª•ng Shizuku ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!${NC}"
    echo -e "${YELLOW}Vui l√≤ng c√†i ƒë·∫∑t Shizuku t·ª´ Play Store ho·∫∑c GitHub.${NC}"
    exit 1
fi

# L·∫•y ƒë∆∞·ªùng d·∫´n Shizuku
sh_path=$(adb -s "$device" shell pm path --user 0 moe.shizuku.privileged.api 2>/dev/null \
  | sed 's/^package://')

if [ -z "$sh_path" ]; then
    echo -e "${RED}L·ªñI: Kh√¥ng th·ªÉ l·∫•y ƒë∆∞·ªùng d·∫´n Shizuku${NC}"
    exit 1
fi

lib_path=$(adb -s "$device" shell "echo \$(dirname \"$sh_path\")/lib/*/libshizuku.so" 2>/dev/null)

if [ -z "$lib_path" ]; then
    echo -e "${RED}L·ªñI: Kh√¥ng th·ªÉ t√¨m th·∫•y libshizuku.so${NC}"
    exit 1
fi

echo -e "${BLUE}[TH√îNG TIN]${NC} ƒêang kh·ªüi ƒë·ªông Shizuku t·ª´: $lib_path"

# Kh·ªüi ƒë·ªông Shizuku
if adb -s "$device" shell "$lib_path" >/dev/null 2>&1; then
    echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} Shizuku ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông th√†nh c√¥ng!"
    
    # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ Shizuku kh·ªüi t·∫°o
    sleep 2
    
    # X√°c minh Shizuku ƒëang ch·∫°y
    if adb -s "$device" shell pgrep -f shizuku >/dev/null 2>&1; then
        echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} Shizuku ƒëang ch·∫°y!"
    else
        echo -e "${YELLOW}[C·∫¢NH B√ÅO]${NC} Kh√¥ng th·ªÉ x√°c minh tr·∫°ng th√°i Shizuku"
    fi
    
    # T·∫Øt wireless debugging
    echo -e "${BLUE}[TH√îNG TIN]${NC} ƒêang t·∫Øt wireless debugging..."
    adb -s "$device" shell settings put global adb_wifi_enabled 0 2>/dev/null
    echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} ƒê√£ t·∫Øt wireless debugging"
    
    exit 0
else
    echo -e "${RED}L·ªñI: Kh·ªüi ƒë·ªông Shizuku th·∫•t b·∫°i${NC}"
    exit 1
fi
EOF

# S·ª≠ d·ª•ng v·ªã tr√≠ dex g·ªëc (kh√¥ng c·∫ßn copy)
dex="${DEX}"

# T·∫°o script Rish n√¢ng cao
log "ƒêang t·∫°o script Rish..."
tee "${BIN}/rish" > /dev/null << EOF
#!/data/data/com.termux/files/usr/bin/bash

# ƒê·ªãnh nghƒ©a c√°c v·ªã tr√≠ c√≥ th·ªÉ c√≥ c·ªßa dex
DEX_LOCATIONS=(
    "${dex}"
    "\${HOME}/rish_shizuku.dex"
    "\${HOME}/shizuku-autostart/rish_shizuku.dex"
    "/data/data/com.termux/files/home/shizuku-autostart/rish_shizuku.dex"
)

# T√¨m file dex
FOUND_DEX=""
for dex_path in "\${DEX_LOCATIONS[@]}"; do
    if [ -f "\$dex_path" ] && [ -r "\$dex_path" ]; then
        FOUND_DEX="\$dex_path"
        break
    fi
done

if [ -z "\$FOUND_DEX" ]; then
    echo -e "\033[0;31mL·ªñI: Kh√¥ng t√¨m th·∫•y rish_shizuku.dex ·ªü b·∫•t k·ª≥ v·ªã tr√≠ n√†o!\033[0m" >&2
    echo -e "\033[1;33mC√°c v·ªã tr√≠ ƒë√£ ki·ªÉm tra:\033[0m" >&2
    for dex_path in "\${DEX_LOCATIONS[@]}"; do
        echo -e "  - \$dex_path" >&2
    done
    echo -e "\033[1;33mVui l√≤ng ch·∫°y l·∫°i script c√†i ƒë·∫∑t: copy.sh\033[0m" >&2
    exit 1
fi

# ƒê·∫∑t application ID m·∫∑c ƒë·ªãnh n·∫øu ch∆∞a c√≥
[ -z "\$RISH_APPLICATION_ID" ] && export RISH_APPLICATION_ID="com.termux"

# Ch·∫°y rish v·ªõi x·ª≠ l√Ω l·ªói ph√π h·ª£p
exec /system/bin/app_process -Djava.class.path="\$FOUND_DEX" /system/bin --nice-name=rish rikka.shizuku.shell.ShizukuShellLoader "\${@}"
EOF

# C·∫•p quy·ªÅn th·ª±c thi
log "ƒêang c·∫•p quy·ªÅn th·ª±c thi..."
if ! chmod +x "${BIN}/shizuku" "${BIN}/rish"; then
    error "Kh√¥ng th·ªÉ c·∫•p quy·ªÅn th·ª±c thi cho c√°c script"
    exit 1
fi

# ƒê·∫∑t quy·ªÅn ph√π h·ª£p cho file dex g·ªëc (c·∫ßn thi·∫øt cho app_process)
log "ƒêang thi·∫øt l·∫≠p quy·ªÅn cho file DEX g·ªëc..."
if ! chmod -w "${DEX}"; then
    warn "Kh√¥ng th·ªÉ thi·∫øt l·∫≠p quy·ªÅn cho file DEX (c√≥ th·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng)"
fi

# Ki·ªÉm tra cu·ªëi c√πng
log "ƒêang ki·ªÉm tra c√†i ƒë·∫∑t..."
if [ -x "${BIN}/shizuku" ] && [ -x "${BIN}/rish" ] && [ -r "${DEX}" ]; then
    success "üéâ C√†i ƒë·∫∑t ho√†n t·∫•t th√†nh c√¥ng!"
    echo
    log "C√°c l·ªánh ƒë√£ ƒë∆∞·ª£c t·∫°o:"
    echo "  üì± shizuku: Script kh·ªüi ƒë·ªông Shizuku"
    echo "  üõ†Ô∏è rish: Shell tool qua Shizuku (s·ª≠ d·ª•ng DEX t·ª´: ${DEX})"
    echo
    if [ "$TERMUX_RESTART_NEEDED" = true ]; then
        warn "‚ö†Ô∏è  VUI L√íNG KH·ªûI ƒê·ªòNG L·∫†I TERMUX APP ƒë·ªÉ allow-external-apps c√≥ hi·ªáu l·ª±c!"
        echo "   1. T·∫Øt ho√†n to√†n ·ª©ng d·ª•ng Termux"
        echo "   2. M·ªü l·∫°i Termux"
        echo "   3. Sau ƒë√≥ ch·∫°y 'shizuku' ƒë·ªÉ th·ª≠ nghi·ªám"
        echo
    fi
    
    log "üöÄ B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:"
    echo "  1. Import macro v√†o MacroDroid"
    echo "  2. Ch·∫°y 'shizuku' ƒë·ªÉ th·ª≠ nghi·ªám th·ªß c√¥ng"
    echo "  3. S·ª≠ d·ª•ng 'rish' ƒë·ªÉ ch·∫°y l·ªánh v·ªõi quy·ªÅn cao"
else
    error "‚ùå C√†i ƒë·∫∑t kh√¥ng ho√†n ch·ªânh. Vui l√≤ng ki·ªÉm tra l·∫°i!"
    exit 1
fi